{
  "title": "기계식 주차장 디스플레이",
  "categories": [
    "C/C++",
    "Wifi",
    "Linux",
    "Serial"
  ],
  "id": "37bb0b8f-f5e4-4377-9ff0-3cfe661b138b",
  "content": "\n## 기계식 주차장 디스플레이 개발\n\n\n![20231201_131454.jpg](/notion-resources/37bb0b8f-f5e4-4377-9ff0-3cfe661b138b/c6543f62a54e09bb2812265bd99cdcf8.jpg)\n\n\n![20231201_131448.jpg](/notion-resources/37bb0b8f-f5e4-4377-9ff0-3cfe661b138b/41024c0463f29ce30a397d50a583ca5a.jpg)\n\n\n![IMG_3742.jpg](/notion-resources/37bb0b8f-f5e4-4377-9ff0-3cfe661b138b/46e9efcb7fa95f9e5037d3f0ed543e80.jpg)\n\n\n![폴스타인0.jpg](/notion-resources/37bb0b8f-f5e4-4377-9ff0-3cfe661b138b/d35afcf7385e5bbe3df3fe2a8cf86f9c.jpg)\n\n\n![폴스타인1.jpg](/notion-resources/37bb0b8f-f5e4-4377-9ff0-3cfe661b138b/9c0ee5407ebbe60574cfbdec34cdfed5.jpg)\n\n\n![폴스타인4.jpg](/notion-resources/37bb0b8f-f5e4-4377-9ff0-3cfe661b138b/8b38b217bd634098782cecdcf2b1d538.jpg)\n\n\n![폴스타인6.jpg](/notion-resources/37bb0b8f-f5e4-4377-9ff0-3cfe661b138b/1960ab8ee8003493a6964f276003ecda.jpg)\n\n\n![폴스타인7.jpg](/notion-resources/37bb0b8f-f5e4-4377-9ff0-3cfe661b138b/8e6c06a6477c574451feb7a49f6cee71.jpg)\n\n\n![폴스타인8.jpg](/notion-resources/37bb0b8f-f5e4-4377-9ff0-3cfe661b138b/2cb50a8ae98207db29a22caadd204575.jpg)\n\n\n### **프로젝트 개요:**\n\n- 프로젝트명: 폴스타인 주차 안내 모니터\n- 프로젝트 기간: 2023년 11월 ~ 2023년 12월\n- 프로젝트 위치: 서울특별시 강남구 논현동 대형 오피스텔 폴스타인\n\n### 프로젝트 목표\n\n- 운전자가 주차하거나 출차하려고 할 때 진행 상태를 보여주기 위한 디스플레이 구축\n\n### 프로젝트 기술 스택\n\n- 하드웨어: RaspberryPi CM4 + CM4-ETH-RS485-BASE-B, HDMI 출력, RS485통신\n- OS: 라즈비안 (Linux)\n- 언어: Python 3.9.2, Thread, Event, Lock, PIL, ImageTk, ImageDraw, ImageFont, serial\n- 제어장치: LS PLC / RS485통신\n- 디스플레이: 14인치 와이드 모니터, 24인치 FHD 모니터\n\n### **프로젝트 주요 기능:**\n\n- LS XGB PLC에서 RS485 통신으로 주차 정보를 가져옴\n- 주차 정보에 맞는 이미지 또는 영상을 HDMI로 연결하여 모니터에 출력\n- RS485 통신시 에러 체크 및 재전송 기능\n- Soft AP 기능: 라즈베리파이의 Soft AP기능을 이용하여 WiFi 통신으로 화면이미지, 프로그램 교체 가능\n\n### **프로젝트 진행 과정:**\n\n1. 라즈베리파이 OS 설치 및 셋팅 (RaspberryPi CM4 + CM4-ETH-RS485-BASE-B)\n2. Python 추가 라이브러리 PIL 설치\n3. Python 라이브러리를 이용해 통신 프로토콜 작성\n4. 배경이미지에 이미지 폰트로 글씨 표현\n5. 정지 이미지 여러장으로 애니메이션 효과 구현\n6. 부팅 후 자동으로 Python 프로그램 실행\n7. 건설 현장에 맞는 알루미늄 브라켓 제작\n\n### **프로젝트 결과:**\n\n- 부팅 후 정상적으로 Python 프로그램이 실행됨\n- 에러 없는 RS485 통신, 강제적으로 에러를 발생 시킨 후 통신 정상 복귀 확인\n- HDMI 연결된 모니터 주차 진행 상태 이미지와 텍스트 및 영상 표시 확인\n",
  "lastUpdateDate": "2024-01-26T11:33:00.000Z",
  "imgUrl": ""
}